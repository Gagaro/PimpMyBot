Fork au début et lance le bot et l'interface web

=> Le parent devrait etre l'interface web afin de pouvoir relancer le bot et d'avoir son statut.

Bot
===

Connexion IRC (https://github.com/justintv/Twitch-API/blob/master/IRC.md)

Gestion de la langue (https://github.com/justintv/Twitch-API/blob/master/IRC.md#roomstate-1 broadcaster-lang)
    polib ?

Configuration : sqlite3, un objet par module

Interface web
=============

Bottle (http://bottlepy.org/docs/dev/index.html)

Système pour passer les infos entre le bot et l'interface web (update de la conf, ...).


Gestion des modules
===================

Un module python chargé automatiquement.

Permet :

    * Lecture des entrées et envois d'une sortie
    * Appel récurrent
    * Ajout de page sur l'interface web
    * Configuration (séparation des configs des différents modules !)


Général
=======

Deamonize (compatible windows/linux)


https://gist.github.com/anonymous/522faa80e0ec915d5d21
https://github.com/RLejolivet/Larbot/blob/master/Larbot/larbot.py


Dans le futur
=============

Angular 2 ?